@{
    Layout = null;
}
<!DOCTYPE html>
<html>

<head>
    <!-- TITLE -->
    <title>케이옥션</title>

    <!-- START META -->
    <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
    <meta charset="utf-8" />
    <meta name="description" content="작품을 사고 팔 땐 미술품 경매회사, 케이옥션" />
    <meta name="author" content="" />
    <meta name="viewport"
        content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, shrink-to-fit=no" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-touch-fullscreen" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-itunes-app" content="app-id=397892527" />
    <meta name="google-play-app" content="app-id=com.kauctionapp.kauction" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="msapplication-TileImage" content="/images/favicon/ms-icon-144x144.png" />
    <meta name="theme-color" content="#ffffff" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="케이옥션" />
    <meta property="og:description" content="작품을 사고 팔 땐 미술품 경매회사, 케이옥션" />
    <meta property="og:image" content="" />
    <meta property="og:url" content="http://www.k-auction.com" />
    <!-- END META -->
    <!-- START ICON -->
    <link rel="icon" type="image/x-icon" href="/img/favicon/favicon.ico" />
    <link rel="apple-touch-icon" href="/img/favicon/60.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/img/favicon/76.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/img/favicon/120.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/img/favicon/152.png">
    <!-- END ICON -->
    <!-- START CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <style>
        html,
        body {
            overflow-x: hidden;
            /* Prevent scroll on narrow devices */
        }

        body {
            padding-top: 56px;
        }

        @@media (max-width: 991.98px) {
            .offcanvas-collapse {
                position: fixed;
                top: 56px;
                /* Height of navbar */
                bottom: 0;
                left: 100%;
                width: 100%;
                padding-right: 1rem;
                padding-left: 1rem;
                overflow-y: auto;
                visibility: hidden;
                background-color: #343a40;
                transition: transform .3s ease-in-out, visibility .3s ease-in-out;
            }

            .offcanvas-collapse.open {
                visibility: visible;
                transform: translateX(-100%);
            }
        }

        .text-white-50 {
            color: rgba(255, 255, 255, .5);
        }

        .bg-purple {
            background-color: #6f42c1;
        }
    </style>
    <!-- END CSS -->
    <!-- BEGIN PLUGIN JS -->

    <!-- END PLUGIN JS -->
    <!-- BEGIN LANG/ICON JS -->

    <!-- END LANG/ICON JS -->
    <!-- START SCRIPT -->

    <!-- END SCRIPT -->
</head>

<body class="bg-light">

    <nav class="navbar navbar-expand-lg fixed-top navbar-dark bg-dark" aria-label="Main navigation">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">접속자 모니터링</a>
        </div>
    </nav>

    <main class="container">
        <div class="d-flex align-items-center p-3 my-3 text-white bg-purple rounded shadow-sm">
            <div class="lh-1">
                <h1 class="h6 mb-0 text-white lh-1">
                    Current Connections : <small id="curr_conn_cnt" class="text-warning"></small>
                </h1>
            </div>
            <div class="ms-4">Max Connections : <small id="max_conn_cnt" class="text-info"></small></div>
        </div>

        <canvas class="my-4 w-100" id="connChart" height="200"></canvas>

        <div class="my-3 p-3 bg-body rounded shadow-sm" id="grpLst"></div>

        <div class="my-3 p-3 bg-body rounded shadow-sm">
            <h6 class="border-bottom pb-2 mb-0">
                Broadcast updates
            </h6>
            <div class="d-block text-end mt-3">
                <button type="button" class="btn btn-sm btn-outline-dark" id="btn_message_clear">로그삭제</button>
                <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="btnradio" id="btn_message_clear_start"
                        autocomplete="off">
                    <label class="btn btn-sm btn-outline-success" for="btn_message_clear_start">자동삭제</label>
                    <input type="radio" class="btn-check" name="btnradio" id="btn_message_clear_stop"
                        autocomplete="off">
                    <label class="btn btn-sm btn-outline-danger" for="btn_message_clear_stop">삭제중지</label>
                </div>
            </div>
            <div id="msgLst">

            </div>
        </div>
    </main>

    <div class="modal fade" tabindex="-1" id="mdl_common">
        <div class="modal-dialog modal-dialog-scrollable modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalScrollableTitle">Connection Users</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="d-flex justify-content-center visually-hidden" id="load_spinner">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                    <div id="modal_contents">

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <template id="tp_grpList">
        <h6 class="border-bottom pb-2 mb-0">경매 접속자</h6>
        {{#.}}
        <div class="d-flex text-muted pt-3">
            <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32"
                xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32"
                preserveAspectRatio="xMidYMid slice" focusable="false">
                <title>Placeholder</title>
                <rect width="100%" height="100%" fill="#007bff" /><text x="50%" y="50%" fill="#007bff"
                    dy=".3em">32x32</text>
            </svg>

            <div class="pb-3 mb-0 small lh-sm border-bottom w-100">
                <div class="d-flex justify-content-between">
                    <strong class="text-gray-dark">#{{auc_num}}</strong>
                    <a href="#" data-role="auc_num_users" data-param="{{auc_num}}" data-bs-toggle="modal"
                        data-bs-target="#mdl_common">Connection List</a>
                </div>
                <span class="d-block">Connections : {{user_cnt}}</span>
            </div>
        </div>
        {{/.}}
        <small class="d-block text-end mt-3">
            <a href="#"> </a>
        </small>
    </template>

    <template id="tp_usrInfos">
        <ul>
            {{#.}}
            <li>
                #{{auc_num}}, DATE: {{cache_date}}, UID: {{www_seq}}, Key: {{connection_id}}, IP: {{ip_val}}
                <p>UA : {{client_val}}</p>
            </li>
            {{/.}}
        </ul>
    </template>

    <template id="tp_msgInfo">
        <div class="d-flex text-muted pt-3">
            {{#isError}}
            <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32"
                xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32"
                preserveAspectRatio="xMidYMid slice" focusable="false">
                <title>Placeholder</title>
                <rect width="100%" height="100%" fill="#e83e8c" /><text x="50%" y="50%" fill="#e83e8c"
                    dy=".3em">32x32</text>
            </svg>
            {{/isError}}
            {{^isError}}
            <svg class="bd-placeholder-img flex-shrink-0 me-2 rounded" width="32" height="32"
                xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: 32x32"
                preserveAspectRatio="xMidYMid slice" focusable="false">
                <title>Placeholder</title>
                <rect width="100%" height="100%" fill="#6f42c1" /><text x="50%" y="50%" fill="#6f42c1"
                    dy=".3em">32x32</text>
            </svg>
            {{/isError}}
            <p class="pb-3 mb-0 small lh-sm border-bottom overflow-hidden">
                <strong class="d-block text-gray-dark">{{call_date}}</strong>
                {{data}}
            </p>
        </div>
    </template>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-JEW9xMcG8R+pH31jmWH6WWP0WintQrMb4s7ZOdauHnUtxwoG2vI5DkLtS3qm9Ekf"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
        integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha"
        crossorigin="anonymous"></script>
    <script src="~/plugins/mustache/mustache.js"></script>
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>


        var func = {
            fn_template_set: function (tp_selector, data, tg_selector) {
                var rendered = Mustache.render(document.querySelector(tp_selector).innerHTML, data);
                var $target = document.querySelector(tg_selector);
                $target.innerHTML = rendered;
            },
            fn_template_append: function (tp_selector, tg_selector, data) {
                var rendered = Mustache.render(document.querySelector(tp_selector).innerHTML, data);
                var doc = new DOMParser().parseFromString(rendered, 'text/html');
                var $target = document.querySelector(tg_selector);
                $target.prepend(doc.querySelector("div"));
            },
            fn_get_auc_num_users: function (dataset) {
                connection.invoke("GetConnectionUsers", dataset.param)
                    .then((users) => {
                        obj.$load_spinner.classList.toggle("visually-hidden");
                    });
            }
        };

        var obj = {
            get $load_spinner() {
                return document.getElementById("load_spinner")
            }
        }


        Object.defineProperty(WebSocket, 'OPEN', { value: 1, });

        var connection = new signalR.HubConnectionBuilder().withUrl("/liveHub").withAutomaticReconnect().build();

        connection.on("ConnNotification", function (conn_cnt) {
            let date = new Date();
            let hhmmss = (date.getHours() < 10 ? ('0' + date.getHours()) : date.getHours()) + ':' + (date.getMinutes() < 10 ? ('0' + date.getMinutes()) : date.getMinutes()) + ':' + (date.getSeconds() < 10 ? ('0' + date.getSeconds()) : date.getSeconds());

            connChart.data.labels.push(hhmmss);
            connChart.data.datasets[0].data.push(conn_cnt);
            connChart.update();

            document.getElementById("curr_conn_cnt").textContent = conn_cnt;
            document.getElementById("max_conn_cnt").textContent = connChart.data.datasets[0].data.reduce((a, b) => Math.max(a, b))
            //document.getElementById("min_conn_cnt").textContent = connChart.data.datasets[0].data.reduce((a, b) => Math.min(a, b))
        });

        connection.on("GroupNotification", function (data) {


            new Promise(
                () => { func.fn_template_set("#tp_grpList", JSON.parse(data), "#grpLst") }
            ).then(
                new Promise(
                    () => {
                        document.querySelectorAll("a[data-role=auc_num_users]").forEach((el, idx) => {
                            el.removeEventListener("click", null, false);
                            el.addEventListener("click", (e) => func.fn_get_auc_num_users(e.target.dataset));
                        });
                    }
                )
            );
        });

        connection.on("GroupUsers", function (data) {
            func.fn_template_set("#tp_usrInfos", data, "#modal_contents");
            obj.$load_spinner.classList.toggle("visually-hidden");
        });

        connection.on("CurrentLotStat", function (data) {
            var json = JSON.parse(data);
            var param = { call_date: json.data.Table[0].call_date, data: JSON.stringify(json.data.Table[0]), isError: false };
            func.fn_template_append("#tp_msgInfo", "#msgLst", param);
        });


        connection.on("CurrentBidHst", function (data) {
            var json = JSON.parse(data);
            var param = { call_date: json.data.Table[0].call_date, data: JSON.stringify(json.data.Table[0]), isError: false };
            func.fn_template_append("#tp_msgInfo", "#msgLst", param);
        });

        connection.on("ErrorNotification", function (data) {
            alert(data);
        });

        connection.start().then(function () {
            try {
                connection.invoke("AddToGroupAdmin");
            }
            catch (e) {
                console.error(e.toString());
            }
        }).catch(function (err) {
            return console.error(err.toString());
        });

        connection.onreconnected(connectionId => {
            console.assert(connection.state === signalR.HubConnectionState.Connected);
            clearInterval(delay);

            var param = { call_date: new Date(), data: "Connection reestablished.Connected with connectionId " + connectionId, isError: true };
            func.fn_template_append("#tp_msgInfo", "#msgLst", param);

            try {
                connection.invoke("AddToGroupAdmin");
            }
            catch (e) {
                console.error(e.toString());
            }
        });

        var delay;
        document.getElementById("btn_message_clear_start").addEventListener("click", () => {
            delay = setInterval(function fn() {
                var $msgLst = document.querySelector("#msgLst");
                //$msgLst.querySelectorAll("div").forEach((e, i, arr) => {
                //    $msgLst.removeChild(e);
                //});
                $msgLst.innerHTML = "";

                clearInterval(delay);
                delay = setInterval(fn, 10000);
            }, 10000);
        });

        document.getElementById("btn_message_clear_stop").addEventListener("click", () => {
            clearInterval(delay);
        });

        document.getElementById("btn_message_clear").addEventListener("click", () => {
            var $msgLst = document.querySelector("#msgLst");
            //$msgLst.querySelectorAll("div").forEach((e, i, arr) => {
            //    $msgLst.removeChild(e);
            //});
            $msgLst.innerHTML = "";
        });

        var connChart;
        /* globals Chart:false, feather:false */
        (function () {
            'use strict'
            var $connChart = document.getElementById('connChart')
            connChart = new Chart($connChart, {
                type: 'line',
                data: {
                    labels: [0],
                    datasets: [{
                        data: [0],
                        //lineTension: 0,
                        steppedLine: 'after',
                        backgroundColor: 'transparent',
                        borderColor: '#007bff',
                        borderWidth: 2,
                        pointBackgroundColor: '#007bff'

                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            stacked: false,
                            ticks: {
                                beginAtZero: true,
                                maxTicksLimit: 5,
                                //max: 1000,
                                min: 0,
                                stepSize: 100
                            }
                        }]
                    },
                    legend: {
                        display: false
                    }
                }
            })
        })()
    </script>
</body>

</html>
