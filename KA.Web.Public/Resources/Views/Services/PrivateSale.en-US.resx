<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="고객님이 구매를 희망하는 미술품을 의뢰하시면, 프라이빗 세일팀에서 최선을 다해 의뢰하신 미술품의 성공적인 제안을 도와드립니다." xml:space="preserve">
    <value>If you would like to inquire about artworks you wish to purchase, our Private Sales Team will do their utmost to provide you with a successful transaction.</value>
    <comment>[Private Sales] 03-2. BUYING PRIVATELY</comment>
  </data>
  <data name="단순한 중개자 역할에서 벗어나 각 고객의 포트폴리오를 보다 체계적으로 관리하는&lt;br&gt;1:1맞춤 서비스를 통하여 경매와는 별도의 미술품 구매 및 판매를 도와드립니다." xml:space="preserve">
    <value>Beyond an intermediary role, we offer bespoke systemized management services for your portfolio to assist you in selling and buying artworks outside of the auction system.</value>
    <comment>[Private Sales] 02. 설명 - #2</comment>
  </data>
  <data name="미술품을 공개적으로 판매하는 경매가 아닌 개인적인 판매를 원하시는 경우, 다년간 축적된 경험으로 작품의 적정 판매가를 산정하여 케이옥션이 보유중인 네트워크로 판매를 도와드립니다." xml:space="preserve">
    <value>If you would like to sell your artwork privately without public exposure, K Auction will appraise your artwork at optimal value through our many years of expertise and experience and assist you in selling through our network.</value>
    <comment>[Private Sales] 03-1. SELLING PRIVATELY</comment>
  </data>
  <data name="케이옥션의 프라이빗 세일은 국내 최고의 미술품 유통망을 기반으로 경매 외 미술품 거래를 희망하는 고객을 위한 서비스입니다." xml:space="preserve">
    <value>K Auction Private Sales offers the most extensive artwork distribution network in Korea for clients searching for alternatives to auctions.</value>
    <comment>[Private Sales] 02. 설명 - #1</comment>
  </data>
  <data name="판매 및 구매 기회에 대해 자세히 알아보시려면, 프라이빗 세일팀(+82-2-3479-8865)으로 문의하시기 바랍니다." xml:space="preserve">
    <value>For more information on selling and purchasing opportunities, please contact our Private Sales Team (+82-2-3479-8865/ps-team@k-auction.com).</value>
    <comment>[Private Sales] 04. 하단</comment>
  </data>
  <data name="프라이빗 세일" xml:space="preserve">
    <value>Private Sales</value>
    <comment>[Private Sales] 01. 상단</comment>
  </data>
</root>