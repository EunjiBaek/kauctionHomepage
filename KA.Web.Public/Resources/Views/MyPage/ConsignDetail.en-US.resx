<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="※ 작품에 기입된 년도 및 제작 년대를 기입해 주세요. (예 : 1990년, 조선시대, 알 수 없음 등)" xml:space="preserve">
    <value>※ Please enter the year and the year of production in the work.</value>
  </data>
  <data name="※ 작품에 대한 보관상태나 요구사항 등을 기입해 주세요." xml:space="preserve">
    <value>※ Please enter the storage status and requirements for the work.</value>
  </data>
  <data name="※ 작품에 대해서 가능한 많은 정보를 기입해 주세요. (예 : 소장 경로 또는 출처, 감정서 유무, 전시이력, 수록된 도서 등)" xml:space="preserve">
    <value>※ Please provide as much information as possible about the work (e.g. path or source of collection, whether there is an appraisal, exhibition history, and the books included).</value>
  </data>
  <data name="※ 작품이 판화인 경우에는 Edition을 기입해 주세요." xml:space="preserve">
    <value>※ If the work is printed in print, please fill in the edition.</value>
  </data>
  <data name="구입가" xml:space="preserve">
    <value>Purchase Price</value>
  </data>
  <data name="기타" xml:space="preserve">
    <value>Other matters</value>
  </data>
  <data name="도자기" xml:space="preserve">
    <value>Pottery</value>
  </data>
  <data name="등록된 사진이 없습니다" xml:space="preserve">
    <value>empty</value>
  </data>
  <data name="목록으로 돌아가기" xml:space="preserve">
    <value>List</value>
    <comment>[ConsignRequest] 99. 버튼</comment>
  </data>
  <data name="문의내역 삭제" xml:space="preserve">
    <value>Delete</value>
    <comment>[ConsignRequest] 99. 버튼</comment>
  </data>
  <data name="사진" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="위탁 신청" xml:space="preserve">
    <value>Application for consignment</value>
  </data>
  <data name="위탁신청" xml:space="preserve">
    <value>Application for consignment</value>
    <comment>[ConsignRequest] 01. Breadcrumb</comment>
  </data>
  <data name="위탁인 정보" xml:space="preserve">
    <value>Consignee Information</value>
    <comment>[ConsignRequest] 02. 위탁인 정보</comment>
  </data>
  <data name="위탁작품 정보" xml:space="preserve">
    <value>Information on consigned works</value>
    <comment>[ConsignRequest] 03. 위탁작품 정보</comment>
  </data>
  <data name="이름" xml:space="preserve">
    <value>Name</value>
    <comment>[ConsignRequest] 02. 위탁인 정보</comment>
  </data>
  <data name="이메일" xml:space="preserve">
    <value>Email</value>
    <comment>[ConsignRequest] 02. 위탁인 정보</comment>
  </data>
  <data name="작가명" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="작품명" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="작품설명" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="작품의 가로" xml:space="preserve">
    <value>작품의 가로</value>
  </data>
  <data name="작품의 세로" xml:space="preserve">
    <value>작품의 세로</value>
  </data>
  <data name="작품의 재료" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="작품의 크기" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="작품의 폭" xml:space="preserve">
    <value>작품의 폭</value>
  </data>
  <data name="작품이미지" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="재료를 선택해 주세요." xml:space="preserve">
    <value>Please select material</value>
  </data>
  <data name="제작연도" xml:space="preserve">
    <value>Year of production</value>
  </data>
  <data name="조각" xml:space="preserve">
    <value>Sculpture</value>
  </data>
  <data name="종이에 채색" xml:space="preserve">
    <value>Coloring paper</value>
  </data>
  <data name="주소" xml:space="preserve">
    <value>Address</value>
    <comment>[ConsignRequest] 02. 위탁인 정보</comment>
  </data>
  <data name="첨부할 파일을 드래그 하세요." xml:space="preserve">
    <value>Drag the file you want to attach.</value>
  </data>
  <data name="출처" xml:space="preserve">
    <value>Provenence</value>
  </data>
  <data name="취소" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="캔버스의 유채" xml:space="preserve">
    <value>Canvas' rape</value>
  </data>
  <data name="파일 추가" xml:space="preserve">
    <value>Add File</value>
  </data>
  <data name="판화" xml:space="preserve">
    <value>Printed painting</value>
  </data>
  <data name="호" xml:space="preserve">
    <value />
  </data>
  <data name="휴대전화" xml:space="preserve">
    <value>Mobile</value>
    <comment>[ConsignRequest] 02. 위탁인 정보</comment>
  </data>
  <data name="희망가" xml:space="preserve">
    <value>Desired Price</value>
  </data>
</root>